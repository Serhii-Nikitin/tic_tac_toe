{"version":3,"sources":["components/Cell.jsx","App.jsx","index.jsx"],"names":["Cell","cell","setCounter","counter","setSelectedCell","selectedCell","useState","button","setButton","isButtonChecked","setIsButtonChecked","className","type","onClick","current","disabled","cells","App","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAGaA,EAAO,SAAC,GAMd,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,gBAEI,KADJC,aAE4BC,mBAAS,KADjC,mBACGC,EADH,KACWC,EADX,OAE0CF,oBAAS,GAFnD,mBAEGG,EAFH,KAEoBC,EAFpB,KAYJ,OACE,wBACEC,UAAU,oCACVC,KAAK,SACLC,QAAS,WACPX,GAAW,SAAAY,GAAO,OAAIA,EAAU,KAXlCN,GAYeL,EAbJ,GAAK,IAAM,EACZ,IAEA,KAWRC,EAAgBH,GAChBS,GAAmB,IAErBK,SAAUN,EATZ,SAWGF,KC5BDS,G,YAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE1BC,EAAM,WAAO,IAAD,EACOX,mBAAS,GADhB,mBAChBH,EADgB,KACPD,EADO,OAEiBI,mBAAS,GAF1B,mBAEhBD,EAFgB,KAEFD,EAFE,KAIvB,OACE,qBAAKO,UAAU,eAAf,SACE,qBAAKA,UAAU,aAAf,SACGK,EAAME,KAAI,SAAAjB,GAAI,OACb,cAAC,EAAD,CAEEC,WAAYA,EACZC,QAASA,EACTE,aAAcA,EACdD,gBAAiBA,EACjBH,KAAMA,GALDA,WCXjBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c23baba8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Cell = ({\n  cell,\n  setCounter,\n  counter,\n  setSelectedCell,\n  selectedCell,\n}) => {\n  const [button, setButton] = useState('');\n  const [isButtonChecked, setIsButtonChecked] = useState(false);\n\n  const handleButton = (count) => {\n    if ((count + 1) % 2 === 0) {\n      setButton('O');\n    } else {\n      setButton('X');\n    }\n  };\n\n  return (\n    <button\n      className=\"game-board__cell button is-active\"\n      type=\"button\"\n      onClick={() => {\n        setCounter(current => current + 1);\n        handleButton(counter);\n        setSelectedCell(cell);\n        setIsButtonChecked(true);\n      }}\n      disabled={isButtonChecked}\n    >\n      {button}\n    </button>\n  );\n};\n\nCell.propTypes = {\n  cell: PropTypes.number.isRequired,\n  counter: PropTypes.number.isRequired,\n  setCounter: PropTypes.func.isRequired,\n  setSelectedCell: PropTypes.func.isRequired,\n  selectedCell: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport { Cell } from './components/Cell';\nimport 'bulma/bulma.sass';\nimport './App.scss';\n\nconst cells = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport const App = () => {\n  const [counter, setCounter] = useState(0);\n  const [selectedCell, setSelectedCell] = useState(0);\n\n  return (\n    <div className=\"page-content\">\n      <div className=\"game-board\">\n        {cells.map(cell => (\n          <Cell\n            key={cell}\n            setCounter={setCounter}\n            counter={counter}\n            selectedCell={selectedCell}\n            setSelectedCell={setSelectedCell}\n            cell={cell}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}